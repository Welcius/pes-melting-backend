swagger: '2.0'
info:
  title: Melting App API
  description: API for the Melting App
  version: 1.0.0
host: melting-app.herokuapp.com
tags:
  - name: auth
    description: Auth related endpoints
  - name: user
    description: User related endpoints
  - name: location
    description: Location related endpoints
schemes:
  - https
paths:
  /auth/register:
    post:
      tags:
        - auth
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: username
          in: formData
          required: true
          type: string
        - name: email
          in: formData
          required: true
          type: string
          format: email
        - name: password
          in: formData
          required: true
          type: string
          format: password
      responses:
        '201':
          description: User created successfully
        '400':
          description: >-
            Missing fields / Input fields do not satisfy the appropiate
            requirements
        '409':
          description: User already exists
  /auth/activate:
    post:
      tags:
        - auth
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          required: true
          type: string
          format: email
        - name: code
          in: formData
          required: true
          type: string
      responses:
        '200':
          description: User has been activated
        '400':
          description: Missing fields
        '401':
          description: Mail and/or the code are not correct
        '409':
          description: User is already activated
  /auth/login:
    post:
      tags:
        - auth
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          required: true
          type: string
          format: email
        - name: password
          in: formData
          required: true
          type: string
          format: password
      responses:
        '201':
          description: Login successful
          schema:
            $ref: '#/definitions/StatusResponse'
          examples:
            application/json:
              jwt: YOUR_JWT_TOKEN
        '404':
          description: Incorrect email and/or password / User not activated / User deleted
  '/users/{user_id}/profile':
    get:
      tags:
        - user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
      responses:
        '200':
          description: Shows profile
          schema:
            $ref: '#/definitions/Profile'
        '401':
          description: Not logged in
        '404':
          description: User doesn't exist / Profile not created yet
      security:
        - JWT: []
    put:
      tags:
        - user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: profile
          in: body
          description: The modified profile
          schema:
            type: object
            properties:
              full_name:
                type: string
              country_code:
                type: string
                minLength: 2
                maxLength: 2
              faculty_id:
                type: integer
                minimum: 1
              biography:
                type: string
            example:
              full_name: Alex Calle Millan
              country_code: ES
              faculty_id: 2
              biography: M'agraden els memes
      responses:
        '200':
          description: Profile modified successfully
          schema:
            $ref: '#/definitions/Profile'
        '401':
          description: >-
            You don't have permission to modify that user profile / Not logged
            in
        '404':
          description: Profile does not exist
        '409':
          description: Error modifying profile
      security:
        - JWT: []
    post:
      tags:
        - user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: profile
          in: body
          description: The new profile
          schema:
            type: object
            required:
              - full_name
              - country_code
              - faculty_id
            properties:
              full_name:
                type: string
              country_code:
                type: string
                minLength: 2
                maxLength: 2
              faculty_id:
                type: integer
                minimum: 1
              biography:
                type: string
            example:
              full_name: Alex Calle Millan
              country_code: ES
              faculty_id: 2
              biography: M'agraden els memes
      responses:
        '201':
          description: Profile created successfully
          schema:
            $ref: '#/definitions/Profile'
        '401':
          description: >-
            You don't have permission to create that user profile / Not logged
            in
        '409':
          description: Profile already exists
      security:
        - JWT: []
  '/users/{user_id}/profile/faculty':
      get:
        tags:
          - user
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: user_id
            in: path
            required: true
            type: integer
            minimum: 1
        responses:
          '200':
            description: Shows faculty associated to profile
            schema:
              $ref: '#/definitions/Location'
          '401':
            description: Not logged in
          '404':
            description: User doesn't exist / Profile not created yet
        security:
          - JWT: []
  '/users/{user_id}/profile/avatar':
    post:
      tags:
        - user
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: 'profile[avatar]'
          in: formData
          type: file
          description: The new avatar image
      responses:
        '200':
          description: Avatar updated successfully
        '400':
          description: Invalid avatar
        '401':
          description: >-
            You don't have permission to modify that user profile / Not logged
            in
      security:
        - JWT: []
  '/users/{user_id}':
    delete:
      tags:
        - user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
      responses:
        '200':
          description: The user was deleted
        '401':
          description: You don't have permission to delete that user / Not logged in
        '404':
          description: User does not exist
        '409':
          description: The user is already deleted / Error deleting user
      security:
        - JWT: []
  /locations/universities:
    get:
      tags:
        - location
      produces:
        - application/json
      responses:
        '200':
          description: List displayed correctly
          schema:
            $ref: '#/definitions/ArrayOfUniversities'
        '401':
          description: Not logged in
      security:
        - JWT: []
  '/locations/universities/{university_id}/faculties':
    get:
      tags:
        - location
      produces:
        - application/json
      parameters:
        - name: university_id
          in: path
          required: true
          type: integer
          minimum: 1
      responses:
        '200':
          description: List displayed correctly
          schema:
            $ref: '#/definitions/ArrayOfFaculties'
        '401':
          description: Not logged in
        '404':
          description: University doesn't exist
      security:
        - JWT: []
  '/users/{user_id}/events':
    get:
      tags:
        - event
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
      responses:
        '200':
          description: List displayed correctly
          schema:
            $ref: '#/definitions/ArrayOfEvents'
        '401':
          description: Not logged in
        '404':
          description: Event doesn't exist
      security:
        - JWT: []
  '/users/:user_id/events':
    post:
      tags:
        - event
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: event
          in: body
          description: The new event
          schema:
            type: object
            required:
              - title
              - description
              - latitude
              - longitude
              - address
              - name
              - date
            properties:
              title:
                type: string
              description:
                type: string
              latitude:
                type: number
              longitude:
                type: number
              address:
                type: string
              name:
                type: string
              date:
                type: string
            example:
              title: la festa fib no magrada i punt
              description: descripció creada
              latitude: '1.2'
              longitude: '1.3'
              address: carrer creat
              name: La locura
              date: 22/06/2020
      responses:
        '201':
          description: Event created successfully
          schema:
            $ref: '#/definitions/Event'
        '401':
          description: You don't have permission to create that event / Not logged in
        '409':
          description: Error
      security:
        - JWT: []
  '/events/{event_id}/event':
    get:
      tags:
        - event
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1
      responses:
        '200':
          description: Shows event
          schema:
            $ref: '#/definitions/Event'
        '401':
          description: Not logged in
        '404':
          description: Event doesn't exist
      security:
        - JWT: []
  '/users/{user_id}/events/{event_id}/event':
    put:
      tags:
        - event
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: event
          in: body
          description: The modified event
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              latitude:
                type: number
              longitude:
                type: number
              address:
                type: string
              name:
                type: string
              date:
                type: string
            example:
              title: titol canviat
              description: descripció canviada
              latitude: '1.2'
              longitude: '1.3'
              address: carrer creat
              name: La locura
              date: 22/06/2020
      responses:
        '200':
          description: Event modified successfully
          schema:
            $ref: '#/definitions/Event'
        '401':
          description: You don't have permission to modify that event / Not logged in
        '404':
          description: Event does not exist
        '409':
          description: Error modifying event
      security:
        - JWT: []
    delete:
      tags:
        - event
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
      responses:
        '200':
          description: Event erased
          schema:
            $ref: '#/definitions/Event'
        '401':
          description: Not logged in
        '404':
          description: Event doesn't exist
      security:
        - JWT: []
  '/users/{user_id/searches/:query/event':
    get:
      tags:
        - event
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1
      responses:
        '200':
          description: Shows event
          schema:
            $ref: '#/definitions/Event'
        '401':
          description: Not logged in
        '404':
          description: Event doesn't exist
      security:
        - JWT: []
  '/search/events':
    get:
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: query
          in: query
          description: query = title
          type: string
      responses:
        '200':
          description: Event filtered with the query
        '401':
          description: Not logged in
        '404':
          description: Event doesn't exist
      security:
        - JWT: []
  '/search/profiles':
    get:
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: query
          in: query
          description: query = full name
          type: string
      responses:
        '200':
          description: Profile filtered with the query
        '401':
          description: Not logged in
        '404':
          description: Profile doesn't exist
      security:
        - JWT: []
  '/search/universities':
    get:
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: query
          in: query
          description: query = name
          type: string
      responses:
        '200':
          description: University filtered with the query
        '401':
          description: Not logged in
        '404':
          description: University doesn't exist
      security:
        - JWT: []
  '/search/faculties':
    get:
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: query
          in: query
          description: query = name
          type: string
      responses:
        '200':
          description: Faculty filtered with the query
        '401':
          description: Not logged in
        '404':
          description: Faculty doesn't exist
      security:
        - JWT: [] 
  /users/{user_id}/events/{event_id}/comments: 
    get:
      tags: 
        - comment
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1 
      responses:
        '200':
          description: List displayed correctly
          schema:
            $ref: '#/definitions/ArrayOfComments'
        '401':
          description: Not logged in
        '404':
          description: Comments doesn't exist
      security:
        - JWT: []
    post:
        tags:
          - comment
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: user_id
            in: path
            required: true
            type: integer
            minimum: 1
          - name: event_id
            in: path
            required: true
            type: integer
            minimum: 1
          - name: event
            in: body
            description: THE new comment
            schema:
              type: object
              required:
                - content
              properties:
                title:
                  type: string
              example:
                content: "La vida és meravellosa després de fer un comentari"
        responses:
          '201':
            description: Comment created successfully
            schema:
              $ref: '#/definitions/Comment'
          '401':
            description: You don't have permission to create that comment / Not logged in
          '409':
            description: Error
        security:
          - JWT: []
  /users/{user_id}/events/{event_id}/comments/{comment_id}/comment:
    put:
      tags:
        - comment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: comment_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: comment
          in: body
          description: The modified comment
          schema:
            type: object
            properties:
              content:
                type: string
            example:
              content: "Necessito una pizza ja"
      responses:
        '200':
          description: Comment modified successfully
          schema:
            $ref: '#/definitions/Comment'
        '401':
          description: You don't have permission to modify that comment / Not logged in
        '404':
          description: Comment does not exist
        '409':
          description: Error modifying comment
      security:
        - JWT: []
    delete:
      tags: 
        - comment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: comment_id
          in: path
          required: true
          type: integer
          minimum: 1  
      responses:
        '200':
          description: Event erased
          schema:
            $ref: '#/definitions/Event'
        '401':
          description: Not logged in
        '404':
          description: Event doesn't exist 
      security:
        - JWT: []  
  /users/{user_id}/events/{event_id}/votes: 
    get:
      tags: 
        - vote
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1 
      responses:
        '200':
          description: List displayed correctly
          schema:
            $ref: '#/definitions/ArrayOfVotes'
        '401':
          description: Not logged in
        '404':
          description: Votes doesn't exist
      security:
        - JWT: []
    post:
        tags:
          - vote
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: user_id
            in: path
            required: true
            type: integer
            minimum: 1
          - name: event_id
            in: path
            required: true
            type: integer
            minimum: 1
        responses:
          '201':
            description: Comment created successfully
            schema:
              $ref: '#/definitions/Comment'
          '401':
            description: You don't have permission to create that vote / Not logged in
          '409':
            description: Error
        security:
          - JWT: []
  /users/{user_id}/events/{event_id}: 
    get:
      tags: 
        - vote
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1 
      responses:
        '200':
          description: Vote (0/1)
        '401':
          description: Not logged in
        '404':
          description: Vote doesn't exist
      security:
        - JWT: []
  /users/{user_id}/events/{event_id}/votes/{vote_id}/vote:
    delete:
      tags: 
        - vote
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: event_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: user_id
          in: path
          required: true
          type: integer
          minimum: 1
        - name: vote_id
          in: path
          required: true
          type: integer
          minimum: 1  
      responses:
        '200':
          description: Vote erased
          schema:
            $ref: '#/definitions/Event'
        '401':
          description: Not logged in
        '404':
          description: Vote doesn't exist 
      security:
        - JWT: [] 
securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: Authorization
definitions:
  StatusResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
      errors:
        type: array
        items:
          type: array
          items:
            type: string
    example:
      application/json:
        message: Error modifying profile
  Profile:
    type: object
    required:
      - >-
        user_id, full_name, biography, karma, country_code, university,
        university_id, faculty, faculty_id, avatarURL
    properties:
      user_id:
        type: integer
        minimum: 1
      username:
        type: string
      full_name:
        type: string
      biography:
        type: string
      karma:
        type: integer
      country_code:
        type: string
      university:
        type: string
      university_id:
        type: integer
        minimum: 1
      faculty:
        type: string
      faculty_id:
        type: integer
        minimum: 1
      avatarURL:
        type: string
    example:
      user_id: 1
      username: alexcmillan
      full_name: Alex Calle Millan
      biography: I like memes
      karma: 0
      country_code: ES
      university: Universitat Politècnica de Catalunya
      university_id: 1
      faculty: Facultat d'Informàtica de Barcelona
      faculty_id: 2
      avatarURL: /uploads/store/e6008535fefa27266fe80db3ecf07a2a.jpg
  Location:
    type: object
    required:
      - 'location_id, name, address, latitude, longitude'
    properties:
      location_id:
        type: integer
        minimum: 1
      name:
        type: string
      alias:
        type: string
      address:
        type: string
      telephone:
        type: string
      url:
        type: string
      latitude:
        type: number
      longitude:
        type: number
    example:
      - location_id: 4
        name: Facultat de Matemàtiques i Estadística (UPC)
        alias: null
        address: Carrer de Pau Gargallo, 6, 08028 Barcelona, Spain
        telephone: 934015880
        url: www.fme.upc.edu
        latitude: 41.383191804750055
        longitude: 2.1138632716911054
  ArrayOfUniversities:
    type: array
    items:
      $ref: '#/definitions/Location'
    example:
    - location_id : 1
      name : Universitat Pompeu Fabra
      alias : UPF
      address : Edif. Mercè, Plaça de la Mercè, 10-12, 08002 Barcelona, Spain
      telephone : 935422000
      url : www.upf.edu
      latitude : 41.378949261870424
      longitude : 2.1794413405262176
    - location_id : 2
      name : Universitat Politècnica de Catalunya
      alias : UPC
      address : Carrer de Jordi Girona, 26, 08034 Barcelona, Spain
      telephone : 934016100
      url : www.upc.es
      latitude : 41.38808167268847
      longitude : 2.115467640261582
  ArrayOfFaculties:
    type: array
    items:
      $ref: '#/definitions/Location'
    example:
    - location_id: 3
      name: Facultat de Nàutica de Barcelona (UPC)
      alias: null
      address: Pla de Palau, 19, 08003 Barcelona, Spain
      telephone: 934017941
      url: www.fnb.upc.edu
      latitude: 41.38217610786729
      longitude: 2.184180862935203
    - location_id: 4
      name: Facultat de Matemàtiques i Estadística (UPC)
      alias: null
      address: Carrer de Pau Gargallo, 6, 08028 Barcelona, Spain
      telephone: 934015880
      url: www.fme.upc.edu
      latitude: 41.383191804750055
      longitude: 2.1138632716911054
  ArrayOfEvents:
    type: array
    items:
      $ref: '#/definitions/Event'
    example:
      - event_id: 1
        title: Titol event 1
        description: desc
        user_id: 1
        latitude: 1.1
        longitude: 1.2
        address: adreça event id 1
        name: nom event id 1
        date: 11/11/11
      - event_id: 2
        title: Titol event 2
        description: desc
        user_id: 1
        latitude: 1.1
        longitude: 1.2
        address: adreça event id 2
        name: nom event id 2
        date: 22/11/22
  ArrayOfComments:
    type: array
    items:
      $ref: '#/definitions/Comment'
    example:
    - comment_id: 1
      content: "Primer comentari"
      event_id: 1
      user_id: 1
    - comment_id: 2
      content: "Segon i últim comentari"
      event_id: 1
      user_id: 2
      
  ArrayOfVotes:
    type: array
    items:
      $ref: '#/definitions/Vote'
    example:
    - vote_id: 1
      event_id: 1
      user_id: 1
    - vote_id: 2
      event_id: 1
      user_id: 2
  Comment:
    type: object
    required: 
      - 'comment_id, event_id, user_id, content'
    properties:
      comment_id:
        type: integer
        minimum: 1
      event_id:
        type: integer
      user_id:
        type: integer
      content:
        type: string
    example: 
      comment_id: 1
      event_id: 1
      user_id: 1
      content: 'Estic orgullós dhaver fet aquest comentari i que funcioni'
  
  Vote:
    type: object
    required: 
      - 'vote_id, event_id, user_id'
    properties:
      vote_id:
        type: integer
        minimum: 1
      event_id:
        type: integer
      user_id:
        type: integer
      content:
        type: string
    example: 
      vote_id: 1
      event_id: 1
      user_id: 1
  Event:
    type: object
    required:
      - >-
        event_id, title, description, user_id, latitude, longitude, address,
        name, date
    properties:
      event_id:
        type: integer
        minimum: 1
      title:
        type: string
      description:
        type: string
      user_id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      address:
        type: string
      name:
        type: string
      date:
        type: string
    example:
      event_id: 1
      title: Aquest és un event
      description: Descripció de levent
      user_id: 1
      latitude: 1.22
      longitude: 1.23
      address: Carrer ja funciona
      name: Festa del carrer
      date: 10/10/2020
